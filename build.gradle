buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.2'
        classpath 'com.novoda:gradle-android-command-plugin:1.2.1'
    }
}


apply plugin: 'android'
apply plugin: 'android-command'
android {
    compileSdkVersion 19
    buildToolsVersion "19.1"

      lintOptions {
          abortOnError false
      }
    
    defaultConfig {
        versionCode 1
        versionName "1.0"
        minSdkVersion 10
        targetSdkVersion 19

        testPackageName 'com.teke.hellogradle.tests'
    }

    signingConfigs {
        debug {
            storeFile file(System.getenv("DEBUG_KEYSTORE"))
        }

        //release {
            //storeFile file(System.getenv("RELESE_KEYSTORE"))
            //storePassword System.getenv("KEYSTORE_PASSWORD")
            //keyAlias System.getenv("KEY_ALIAS")
            //keyPassword System.getenv("KEY_PASSWORD")
        //}
    }


    lintOptions {
          abortOnError false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

task installApk(type:Exec) {

  //on linux
  //  commandLine 'my_adb/install_apk_device.sh'
  commandLine 'adb', 'install', '-r', '../build/apk/AndroidJenkinsGradle-debug-unaligned.apk'
  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  ext.output = {
    return standardOutput.toString()
  }
}

task startMainActivity(type:Exec) {
 //on linux
  commandLine 'my_adb/start_main_activity.sh'
  standardOutput = new ByteArrayOutputStream()
  ext.output = {
    return standardOutput.toString()
  }
}

task uninstallApk(type:Exec) {
 //on linux
  commandLine 'my_adb/uninstall_apk_device.sh'
  standardOutput = new ByteArrayOutputStream()
  ext.output = {
    return standardOutput.toString()
  }
}
